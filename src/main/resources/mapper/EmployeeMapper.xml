<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.checkin.mapper.EmployeeMapper">
    <update id="update" parameterType="com.example.checkin.model.request.EmployeeRequest">
        UPDATE employee
        SET
            name = #{name},
            dob = #{dob},
            gender = #{gender},
            phone = #{phone},
            "nationalId" = #{nationalId},
            "imgNationalId" = #{imgNationalIdFile},
            unit = #{unit},
            room = #{room},
            "position" = #{position},
            job = #{job},
            email = #{email},
            "imgProfile" = #{imgProfileFile},
            status = #{status}
        WHERE id = #{id}::uuid
    </update>
    <delete id="delete" parameterType="com.example.checkin.model.request.EmployeeRequest">
        DELETE FROM employee
        WHERE id = #{id}::uuid
    </delete>

    <select id="create" parameterType="com.example.checkin.model.request.EmployeeRequest"
            resultType="com.example.checkin.model.response.EmployeeResponse">
        INSERT INTO employee(
            code,
            name,
            dob,
            gender,
            phone,
            "nationalId",
            "imgNationalId",
            unit,
            room,
            "position",
            job,
            email,
            "imgProfile",
            status,
            account_id
        )VALUES (
            #{code},
            #{name},
            #{dob},
            #{gender},
            #{phone},
            #{nationalId},
            #{imgNationalIdFile},
            #{unit},
            #{room},
            #{position},
            #{job},
            #{email},
            #{imgProfileFile},
            #{status},
            #{accountId}
        ) RETURNING *;
    </select>
    <select id="getEmployee" parameterType="com.example.checkin.model.request.EmployeeRequest"
            resultType="com.example.checkin.model.response.EmployeeResponse">
        SELECT employee.*
        FROM employee
        <where>
            <if test="room !=null and room !=''">
                AND employee.room = #{room}
            </if>
            <if test="gender !=null and gender !=''">
                AND employee.gender = #{gender}
            </if>
            <if test="position !=null and position !=''">
                AND employee.position = #{position}
            </if>
            <if test="status !=null and status !=''">
                AND employee.status = #{status}
            </if>
        </where>

        ORDER BY employee.code ASC

        <if test="limit > 0">
            OFFSET (#{page} - 1) * #{limit} FETCH NEXT #{limit} ROWS ONLY
        </if>
    </select>
    <select id="getEmployeeByRole" resultType="com.example.checkin.model.response.EmployeeResponse">
        SELECT employee.*
        FROM employee
        LEFT JOIN employee_role ON employee.id = employee_role.employee_id
        <where>
            <if test="role !=null">
                <foreach collection="role" item="item">
                    AND employee_role.service_id = #{item}
                </foreach>
            </if>
        </where>

        ORDER BY employee.code ASC

        <if test="limit > 0">
            OFFSET (#{page} - 1) * #{limit} FETCH NEXT #{limit} ROWS ONLY
        </if>
    </select>
    <select id="getAll" resultType="com.example.checkin.model.response.EmployeeResponse">
        SELECT * FROM employee
        LEFT JOIN user_account ON employee.account_id = user_account.id
        WHERE user_account.role = 'EMPLOYEE'
    </select>
    <select id="countEmployee" parameterType="com.example.checkin.model.request.EmployeeRequest" resultType="java.lang.Integer">
        SELECT count(*) FROM employee
        <where>
            <if test="room !=null and room !=''">
                AND employee.room = #{room}
            </if>
            <if test="gender !=null and gender !=''">
                AND employee.gender = #{gender}
            </if>
            <if test="position !=null and position !=''">
                AND employee.position = #{position}
            </if>
            <if test="status !=null and status !=''">
                AND employee.status = #{status}
            </if>
        </where>
    </select>
    <select id="checkInfo" resultType="java.lang.Integer">
        SELECT count(*) FROM employee
        WHERE code = #{code}
    </select>
    <select id="getAccountId" resultType="java.lang.String">
        SELECT account_id FROM employee
        WHERE id = #{employeeId}
    </select>
    <select id="getId" resultType="java.lang.Integer">
        SELECT COUNT(*) + 1 FROM employee
    </select>
    <select id="getEmployeeIdByAccountId" resultType="string">
        SELECT id FROM employee
        WHERE account_id = #{accountId}
    </select>
</mapper>